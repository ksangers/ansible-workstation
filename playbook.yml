- hosts: localhost
  connection: local

  tasks:
    - name: Ensure Docker requirements are installed
      apt:
        name: '{{ item }}'
        state: latest
        update_cache: yes
      become: yes
      become_method: sudo
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
    
    - name: Ensure 'Docker' GPG key is added
      become: yes
      become_method: sudo
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    
    - name: Ensure 'Docker' APT repository is available
      become: yes
      become_method: sudo
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu disco stable
        state: present
    
    - name: Ensure 'Google Cloud SDK' GPG key is added
      become: yes
      become_method: sudo
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    
    - name: Ensure 'Google Cloud SDK' APT repository is available
      become: yes
      become_method: sudo
      apt_repository:
        repo: deb https://packages.cloud.google.com/apt cloud-sdk main
        state: present

    - name: Ensure latest version of Docker CE is installed
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
        name: docker-ce
        state: latest

    - name: "Ensure user '{{ lookup('env','USER') }}' is added to group 'docker'"
      become: yes
      become_method: sudo
      user:
        name: "{{ lookup('env','USER') }}"
        groups: docker
        append: yes

    - name: Ensure docker-compose is available
      apt:
        name: '{{ item }}'
        state: latest
        update_cache: yes
      become: yes
      become_method: sudo
      loop:
        - docker-compose

    - name: Ensure google-cloud-sdk is available
      apt:
        name: '{{ item }}'
        state: latest
        update_cache: yes
      become: yes
      become_method: sudo
      loop:
        - google-cloud-sdk

    - name: Ensure kubectl is available
      apt:
        name: '{{ item }}'
        state: latest
        update_cache: yes
      become: yes
      become_method: sudo
      loop:
        - kubectl

    - name: Ensure ~/.local/bin exists
      file:
        path: "/home/{{ lookup('env','USER') }}/.local/bin"
        state: directory
        mode: '0755'

    - name: Ensure ~/.local/bin is part of PATH in ~/.bashrc
      lineinfile:
        dest: "/home/{{ lookup('env','USER') }}/.bashrc"
        state: present
        backrefs: yes
        regexp: 'PATH=(["]*)((?!.*?~/.local/bin).*?)(["]*)$'
        line: 'PATH=\1\2:~/.local/bin\3'

    - name: Ensure 'MediaCT Docker Compose Development Manager' ('dev') is cloned to ~/.local/lib
      git:
        repo: https://github.com/mediact/docker-compose-development-manager.git
        dest: "/home/{{ lookup('env','USER') }}/.local/lib/docker-compose-development-manager"

    - name: Ensure 'dev' is executable
      file:
        dest: "/home/{{ lookup('env','USER') }}/.local/lib/docker-compose-development-manager/dev"
        mode: +x

    - name: Ensure 'dev' is available by linking it to ~/.local/bin/dev
      file:
        src: "/home/{{ lookup('env','USER') }}/.local/lib/docker-compose-development-manager/dev"
        dest: "/home/{{ lookup('env','USER') }}/.local/bin/dev"
        state: link

    - name: Ensure XDebug works from development environments
      become: yes
      ufw:
        rule: allow
        proto: tcp
        port: '9000'
